---
import { Icon } from 'astro-icon/components';
import { getImage } from 'astro:assets';
import Button from '../ui/Button.astro';

import heroBackgroundImage from '~/assets/premier-hero-bg.jpeg';
const optimizedImage = await getImage({ src: heroBackgroundImage });
const backgroundURL = `url(${optimizedImage.src})`; // Used within the style tag to set the background image

const {
	title = await Astro.slots.render('title'),
	subtitle = await Astro.slots.render('subtitle'),
	actions = await Astro.slots.render('actions'),
	badges = await Astro.slots.render('badges'),
	bottomFeatures = await Astro.slots.render('bottomFeatures'),
	id,
} = Astro.props;
---

<section
	class="hero-bg min-h-screen flex items-center relative not-prose"
	{...id ? { id } : {}}
>
	<div class="container mx-auto px-4 py-20 relative">
		<div class="max-w-4xl mx-auto text-center text-white">
			<!-- Top badges section -->
			<div
				class="flex items-center justify-center space-x-4 mb-6 intersect-once intersect-half motion-safe:md:opacity-0 motion-safe:md:intersect:animate-(--animation-fade)"
			>
				<slot name="badges">
					{
						badges && (
							<>
								<div class="flex items-center space-x-1">
									{Array.from({ length: 5 }).map((_, i) => (
										<Icon
											name="lucide:star"
											class="lucide-star h-5 w-5 fill-accent-400 text-accent-400 stroke-accent-400"
										/>
									))}
									<span class="ml-2 text-accent-100 font-medium">
										5.0 Rating
									</span>
								</div>
								<div class="hidden sm:block w-px h-6 bg-white/30" />
								<div class="flex items-center space-x-2">
									<Icon
										name="lucide:shield"
										class="h-5 w-5 text-accent-400"
									/>
									<span class="text-accent-100 font-medium">
										Licensed & Insured
									</span>
								</div>
							</>
						)
					}
				</slot>
			</div>
			<!-- Main title -->
			{
				title && (
					<h1
						class="font-heading text-5xl md:text-6xl lg:text-7xl font-bold mb-6 leading-tight intersect-once intersect-half motion-safe:md:opacity-0 motion-safe:md:intersect:animate-(--animation-fade)"
						set:html={title}
					/>
				)
			}

			<!-- Subtitle -->
			{
				subtitle && (
					<p
						class="text-xl md:text-2xl mb-8 text-blue-100 max-w-3xl mx-auto leading-relaxed intersect-once intersect-half motion-safe:md:opacity-0 motion-safe:md:intersect:animate-(--animation-fade)"
						set:html={subtitle}
					/>
				)
			}
			<!-- Actions/CTA buttons -->

			{
				actions && (
					<div class="flex flex-col sm:flex-row items-center justify-center space-y-4 sm:space-y-0 sm:space-x-6 mb-12 intersect-once intersect-half motion-safe:md:opacity-0 motion-safe:md:intersect:animate-(--animation-fade)">
						{Array.isArray(actions) ? (
							actions.map((action) => (
								<div class="flex w-full sm:w-auto">
									<Button
										{...(action || {})}
										class="w-full sm:mb-0"
									/>
								</div>
							))
						) : (
							<Fragment set:html={actions} />
						)}
					</div>
				)
			}

			<!-- Bottom features -->
			<div
				class="flex flex-wrap items-center justify-center gap-8 text-sm text-blue-200 intersect-once intersect-half motion-safe:md:opacity-0 motion-safe:md:intersect:animate-(--animation-fade)"
			>
				<slot name="bottomFeatures">
					{
						bottomFeatures ? (
							<Fragment set:html={bottomFeatures} />
						) : (
							<>
								<div class="flex items-center space-x-2">
									<Icon
										name="lucide:award"
										class="h-5 w-5 text-accent-400"
									/>
									<span>25+ Years Experience</span>
								</div>
								<div class="flex items-center space-x-2">
									<Icon
										name="lucide:shield"
										class="h-5 w-5 text-accent-400"
									/>
									<span>Fully Licensed & Bonded</span>
								</div>
								<div class="flex items-center space-x-2">
									<Icon
										name="lucide:star"
										class="h-5 w-5 fill-accent-400 text-accent-400"
									/>
									<span>500+ Happy Customers</span>
								</div>
							</>
						)
					}
				</slot>
			</div>
		</div>
	</div>

	<!-- Scroll indicator -->
	<div
		class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce"
	>
		<div
			class="w-6 h-10 border-2 border-white/50 rounded-full flex justify-center"
		>
			<div class="w-1 h-3 bg-white/70 rounded-full mt-2 animate-pulse"></div>
		</div>
	</div>

	<script>
		function scrollToContact() {
			const element = document.getElementById('contact');
			if (element) {
				element.scrollIntoView({ behavior: 'smooth' });
			}
		}

		// Add event listener to the button
		document.addEventListener('DOMContentLoaded', () => {
			const button = document.getElementById('get-estimate-btn');
			if (button) {
				button.addEventListener('click', scrollToContact);
			}
		});
	</script>

	<style define:vars={{ backgroundURL }}>
		.hero-bg {
			background-image: linear-gradient(
					135deg,
					rgba(30, 58, 138, 0.9) 0%,
					rgba(30, 58, 138, 0.7) 100%
				),
				var(--backgroundURL);
			background-size: cover;
			background-position: center;
			background-attachment: fixed;
		}
	</style>
</section>

<style>
	.lucide-star {
		path {
			fill: currentColor;
		}
	}
</style>
